apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  namespace: argo
  generateName: ra2ce-uncertainty-uq2-
spec:
  entrypoint: scenario-workflow
  templates:
  - name: scenario-workflow
    steps:
    - - name: define-events
        template: get-events-output-graphs
    - - name: get-vulnerability-curve
        template: get-vulnerability-curve
        arguments:
          parameters:
          - name: output_floodmap
            value: "{{item}}"
        withParam: "{{steps.define-events.outputs.result}}"
    - - name: run-scenario
        template: run-scenario
        arguments:
          parameters:
          - name: output_floodmap
            value: "{{item}}"
        withParam: "{{steps.get-vulnerability-curve.outputs.result}}"

  - name: get-events-output-graphs
    script:
      image: containers.deltares.nl/ra2ce/ra2ce:hackathon_uncertainty
      workingDir: /modeldata
      command: [python]
      source: |
        import json
        import random
        from pathlib import Path

        import boto3

        # s3://ra2ce-data/uncertainty_hackathon/flood_maps/
        bucket = "ra2ce-data"
        _root_dir = "uncertainty_hackathon/output_1/"

        client = boto3.client("s3")
        result = client.list_objects(Bucket=bucket, Prefix=_root_dir, Delimiter="/")
        _selected_events = []
        n_runs = 100
        for _sub_prefix in result.get("CommonPrefixes"):
            _prefix = _sub_prefix["Prefix"]
            _prefix_path = Path(_prefix)
            _prefix_result = client.list_objects(Bucket=bucket, Prefix=_prefix, Delimiter="/")
            _event_files = [
                str(
                    (Path(_c["Prefix"]).joinpath("output_graph")).relative_to(
                        _prefix_path.parent
                    )
                )
                for _c in _prefix_result.get("CommonPrefixes")
            ]
            for n in range(n_runs):
                _selected_events.append(random.choice(_event_files))
        print(json.dumps(_selected_events))

  - name: run-scenario
    container:
      image: containers.deltares.nl/ra2ce/ra2ce:hackathon_uncertainty
      command: [python, "/scripts/other_script.py"]
      resources:
        requests:
          cpu: 1
          memory: "4Gi"
        limits:
          cpu: 1
          memory: "4Gi"
    nodeSelector:
      beta.kubernetes.io/instance-type: "m5.xlarge"
    inputs:
      parameters:
        - name: output_floodmap
      artifacts:
        - name: output_graph
          path: /modeldata/static/output_graph # How we mount it.
          s3:
            endpoint: s3.amazonaws.com
            bucket: ra2ce-data
            key: "uncertainty_hackathon/output_1/{{inputs.parameters.event_floodmap}}"
            region: eu-west-1
            accessKeySecret:
              name: my-s3-credentials
              key: accessKey
            secretKeySecret:
              name: my-s3-credentials
              key: secretKey
          archive:
            none: {}
        - name: vulnerability_curves
          path: /vulnerability_curves # How we mount it
          s3: 
            endpoint: s3.amazonaws.com
            bucket: ra2ce-data
            key: uncertainty_hackathon/vulnerability_curves
            region: eu-west-1
            accessKeySecret:
              name: my-s3-credentials
              key: accessKey
            secretKeySecret:
              name: my-s3-credentials
              key: secretKey
          archive:
            none: {}
        - name: modeldata
          path: /modeldata # How we mount it.
          s3:
            endpoint: s3.amazonaws.com
            bucket: ra2ce-data
            key: uncertainty_hackathon/working_dir
            region: eu-west-1
            accessKeySecret:
              name: my-s3-credentials
              key: accessKey
            secretKeySecret:
              name: my-s3-credentials
              key: secretKey
          archive:
            none: {}
        - name: scripts
          path: /scripts
          s3:
            endpoint: s3.amazonaws.com
            bucket: ra2ce-data
            key: uncertainty_hackathon/scripts
            region: eu-west-1
            accessKeySecret:
              name: my-s3-credentials
              key: accessKey
            secretKeySecret:
              name: my-s3-credentials
              key: secretKey
          archive:
            none: {}
    outputs:
      artifacts:
      - name: ra2ce-analysis-output
        path: /output_workflow2/events
        s3:
          bucket: ra2ce-data
          endpoint: s3.amazonaws.com
          region: eu-west-1
          key: uncertainty_hackathon/output_2/
          accessKeySecret:
            name: my-s3-credentials
            key: accessKey
          secretKeySecret:
            name: my-s3-credentials
            key: secretKey
        archive:
          none: {}
 